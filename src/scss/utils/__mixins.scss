// px to rem
@function rem($pixels, $context: $font-size) {
    @if (unitless($pixels)) {
        $pixels: $pixels * 1px;
    }
    @if (unitless($context)) {
        $context: $context * 1px;
    }
    @return $pixels / $context * 1rem;
}


// Breakpoints media request
@mixin media-xs {
	@media screen and (max-width: $breakpoint-xs) {
		@content;

		@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
			@content;
		}
	}
}

@mixin media-s {
	@media screen and (max-width: $breakpoint-s) {
		@content;

		@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
			@content;
		}
	}
}

@mixin media-m {
	@media screen and (max-width: $breakpoint-m) {
		@content;

		@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
			@content;
		}
	}
}

@mixin media-l {
	@media screen and (max-width: $breakpoint-l) {
		@content;

		@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
			@content;
		}
	}
}

@mixin media-xl {
	@media screen and (max-width: $breakpoint-xl) {
		@content;

		@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
			@content;
		}
	}
}

@mixin media-xxl {
	@media screen and (max-width: $breakpoint-xxl) {
		@content;

		@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
			@content;
		}
	}
}

@mixin media-xxxl {
	@media screen and (max-width: $breakpoint-xxxl) {
		@content;

		@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
			@content;
		}
	}
}

@mixin btn-reset() {
    padding: 0;
    border: none;
    background-color: transparent;
    outline: none;
	cursor: pointer;
}